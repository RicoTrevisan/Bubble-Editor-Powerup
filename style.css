/* ❤️ */
/* Data > Option sets - make Display inputs as wide as they can be */
/* Set the container grid */
❤️ codelesslove,
#mainwindow .option-set-values > .field {
    display: grid;
    grid-template-columns: 1fr auto auto auto auto auto;
    gap: 0px;
}
/* Expand the input and it's container */
❤️ codelesslove,
#mainwindow .option-set-values > .field .composer-textbox,
#mainwindow .option-set-values > .field .composer-textbox > input {
  width: 100% !important;
}
/* Trash can and icon are switched when grid template is used, put them back in the correct order.  */
❤️ codelesslove,
#mainwindow .custom-fields > .field .delete-btn {
  order: 2;
}
/* Heart indicator on the right-edge of the input */
❤️ codelesslove,
#mainwindow .option-set-values > .field .composer-textbox {
  position: relative;/* give the ::after pseudoelement something to be relative to */
}
❤️ codelesslove,
#mainwindow .option-set-values > .field .composer-textbox::after {
    content: "❤️";
    font-size: 5px;
    margin-left: 0px;
    position: relative;
    top: 50%;
    display: inline-block;
    float: right;
    right: 11px;
    width: 0;
    height: 0;
}
/* ❤️ */
/* Data > Option sets - make the "move up" and "move down" gaps not collapse */
❤️ codelesslove,
#mainwindow .custom-fields > .field:first-child .modify-attr-btn:nth-child(2)::after {
    content: "move up";
    margin-left: 8px;
    opacity: 0;
}
❤️ codelesslove,
#mainwindow .custom-fields > .field:last-child .modify-attr-btn:nth-child(3)::after {
    content: "move down";
    margin-left: 8px;
    opacity: 0;
}
/* Heart indicators where gaps are */
❤️ codelesslove,
#mainwindow .custom-fields > .field:first-child .modify-attr-btn:nth-child(3)::before {
    content: "❤️";
    width: 0;
    left: -39px;
    display: inline-block;
    position: relative;
    font-size: 5px;
    top: -2px;
}
❤️ codelesslove,
#mainwindow .custom-fields > .field:last-child .modify-attr-btn:nth-child(3)::before {
  content: "❤️";
  width: 0;
  right: -102px;
  display: inline-block;
  position: relative;
  font-size: 5px;
  top: -2px;
}

/* ❤️ */
/* Design - Make the design canvas left align. */
❤️ codelesslove,
#mainwindow .canvas.resp-v1 > .canvas-inner,
#mainwindow .designcanvas > .canvas-inner {
    justify-self: left !important;
    margin-left: 40px;
}
/* Heart indicator on the right-hand side */
❤️ codelesslove,
#mainwindow .tabcanvas.tabs-1 .canvas.resp-v1,
#mainwindow .tabcanvas.tabs-1 .designcanvas.resp-v1 {
  grid-template-areas: "content after";
  grid-template-columns: max-content 1fr;
}
❤️ codelesslove,
#mainwindow .canvas.resp-v1::after,
#mainwindow .designcanvas::after {
    content: "❤️";
    grid-area: after;
    font-size: 10px;
    width: 100%;
    display: block;
    text-align: center;
    margin-right: -5px;
    margin-left: -5px;
    position: relative;
    top: calc(50vh - 84px); /* half of the screen plus the top bar and the top padding*/
}

/* ❤️ */
/* Property Editor - Conditional Expression Composer. Break expression onto new lines and indent.*/

/* Make expressions indented */
❤️ codelesslove,
.property-editor-2 .viewport .condition {
  clear: both;
  width: 100%;/* be at least 100% when there isn't enough content*/
}
❤️ codelesslove,
.property-editor-2 .viewport .condition .composer.composer.composer.composer {
  width: 100%;/* expand to full width */
}
❤️ codelesslove,
.property-editor-2 .viewport .condition .nested {
  display: block;
}
❤️ codelesslove,
.property-editor-2 .viewport .condition .nested .nested .nested {
    margin-left: 1em;
}
❤️ codelesslove,
.property-editor-2 .viewport .condition .parens.parens-transparent {
  opacity: 1;
}
/* Heart indicator in opening parens (which is usually hidden and is on its own line) */
❤️ codelesslove,
.property-editor-2 .viewport .condition .parens.parens-transparent::after {
  content: "❤️";
  width: 0;
  display: inline-block;
  position: relative;
  font-size: 5px;\
}

/* ❤️ */
/* Expression Composer Text Area */

/* Add a gap and (a heart) where static text may be input */
❤️ codelesslove,
.property-editor-2 .textcomposer-entry.dynamic-entry-reorg {
  display: inline;
}
❤️ codelesslove,
.property-editor-2 .text-entry.static-entry-reorg::after {
    content: "❤️";
    font-size: 3px;
    position: relative;
    right: 0;
    top: -2px;
    padding-right: 5px;
    line-height: 0;
    opacity: .8;
  }
/* When an expression box allows static text at the end, expand the static-text "hitbox" to the full width of the expression input. */
❤️ codelesslove,
.property-editor-2 .object-list-editor .entry {/* flexbox with wrapping so that the 3rd item wraps if it's wider than the available width */
  display: flex;
  flex-wrap: wrap;
}
❤️ codelesslove,
.property-editor-2 .object-list-editor .entry .row {
  display: inline-block;
  box-sizing: border-box;
  flex: 0 1 auto;
}
❤️ codelesslove,
.property-editor-2 .object-list-editor .entry .row[prop_name=value]{
 flex: 1 1 auto;
 position: relative;/* give the heart indicator something to be relative to.  */
}
/* This is the "hitbox" for the static text input. make sure it's full width. These are all inline elements, but putting a block-level element inside them snaps them out of it.  */
❤️ codelesslove,
.property-editor-2 .object-list-editor .entry .row[prop_name=value] .prop-row-contents .body .editor.shorttext .text-composer {
  display: block !important;
  width: 100% !important;
  top: -2px;
}
/* add heart indicator to the far-right of the hitbox to show it's clickable. */
❤️ codelesslove,
.property-editor-2 .object-list-editor .entry .row[prop_name=value] .prop-row-contents .body .editor.shorttext::after {
  content: "❤️";
  font-size: 3px;
  position: absolute;
  right: 0;
  top: 0;
  right: 0;
  opacity: .8;
}

/* ❤️ */
/* Workflow Editor > Sidebar */

/* In the Workflow editor, make the folders have a darker grey, to distinguish from non-folders */
❤️ codelesslove,
#mainwindow .action-editor [data-name=workflowList] div[data-name=FolderItem] {
  background-color: rgb(241 241 241 / 40%);
}
❤️ codelesslove,
#mainwindow .action-editor [data-name=workflowList]>div {
  position: relative; /* give the heart indicator something to attach to */
}
❤️ codelesslove,
#mainwindow .action-editor [data-name=workflowList] div[data-name=FolderItem]::after {
  content: "❤️";
  font-size: 3px;
  position: absolute;
  top: unset;
  right: 3px;
  opacity: .8;
}
❤️ codelesslove,
#mainwindow .action-editor [data-name=workflowList] div[data-name=FolderItem] + div,
#mainwindow .action-editor [data-name=workflowList] div[data-name=FolderItem] + div [aria-selected=true] {
    box-shadow: rgb(204, 204, 204) 4px 4px 4px -4px inset;/* inset shadow on top and left, for first item */
}
❤️ codelesslove,
#mainwindow .action-editor [data-name=workflowList] div[data-name=FolderItem]~ div:nth-child(n+3),
#mainwindow .action-editor [data-name=workflowList] div[data-name=FolderItem]~ div:nth-child(n+3) [aria-selected=true] {
  box-shadow: rgb(204, 204, 204) 4px 0 4px -4px inset;/* inset shadow on left only, for all other items*/
}
